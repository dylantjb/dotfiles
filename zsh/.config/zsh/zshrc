#!/bin/zsh
# vim:fileencoding=utf-8:ft=conf:foldmethod=marker
#          __
#  _______| |__  _ __ ___ 
# |_  / __| '_ \| '__/ __|
#  / /\__ \ | | | | | (__ 
# /___|___/_| |_|_|  \___|
#
#

#: Plugins {{{
# Enable cd abbreviations
setopt auto_cd

# Enable Powerlevel10k instant prompt
autoload -U colors && colors
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export CASE_SENSITIVE='true'
export HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_FOUND=''
export zle_highlight=('paste:none')

export ZINITDIR="${XDG_CONFIG_HOME:-$HOME/.config}/zinit"

# Added by Zinit's installer
if [[ ! -f $ZINITDIR/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$ZINITDIR" && command chmod g-rwX "$ZINITDIR"
    command git clone https://github.com/zdharma/zinit "$ZINITDIR/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$ZINITDIR/bin/zinit.zsh"

export ZINIT[BIN_DIR]="$ZINITDIR/bin"
export ZINIT[HOME_DIR]="$ZINITDIR"
export ZINIT[PLUGINS_DIR]="$ZINITDIR/plugins"
export ZINIT[COMPLETIONS_DIR]="$ZINITDIR/completions"
export ZINIT[SNIPPETS_DIR]="$ZINITDIR/snippets"
export ZINIT[ZCOMPDUMP_PATH]="$ZINITDIR/.zcompdump"

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

zinit ice depth=1; zinit light romkatv/powerlevel10k
[[ ! -f ${XDG_CONFIG_HOME:-$HOME/.config}/powerlevel10k/config.zsh ]] || source $HOME/.config/powerlevel10k/config.zsh
export POWERLEVEL9K_SHORTEN_STRATEGY=truncate_to_last

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-submods
# End of Zinit's installer chunk

zinit wait lucid for \
    atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
       zdharma/fast-syntax-highlighting \
    blockf \
       zsh-users/zsh-completions \
    atload"!_zsh_autosuggest_start" \
       zsh-users/zsh-autosuggestions

zinit light zsh-users/zsh-history-substring-search

zinit ice silent wait"0"
zinit light Aloxaf/fzf-tab

zinit ice wait"0" lucid pick"zsh-system-clipboard.zsh"
zinit light kutsan/zsh-system-clipboard

zinit ice wait"2" lucid as"program" pick"bin/git-dsf"
zinit light zdharma/zsh-diff-so-fancy

zinit ice wait"2" silent
zinit light MichaelAquilina/zsh-autoswitch-virtualenv
export AUTOSWITCH_VIRTUAL_ENV_DIR="$WORKON_HOME"

# zinit ice from"gh-r" as"program" bpick"*appimage*" ver"nightly" mv"nvim* -> nvim" pick"nvim"
# zinit light neovim/neovim

source /usr/share/fzf/completion.zsh
# source /usr/share/fzf/key-bindings.zsh
#: }}}

#: COLORS {{{1
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:*:kill:*:processes' command 'ps xo pid,user:10,cmd | ack-grep -v "sshd:|-zsh$"'
# }}}

#: Aliases {{{
alias upgrade="yay -Syyu"
alias debloat="sudo pacman -Rns $(pacman -Qdtq | tr '\r\n' ' ')"
alias degit="rm -rf .git*"
alias vimdiff="nvim -d"
alias stowit="stow -vt ~"
alias unstow="stow -Dvt ~"
alias darkmode="xrdb ~/.config/x11/xresources && xdotool key Shift_L+Super_L+Delete"
alias y="yay -Sy"
alias yr="yay -Rns"
alias p="sudo pacman -Sy"

alias zrc="nvim ~/.config/zsh/.zshrc"
alias nvimrc="nvim ~/.config/doom-nvim/doomrc"
alias slockrc="nvim ~/repos/slock/config.h"
alias blockrc="nvim ~/repos/dwmblocks/config.h"
alias dwlrc="nvim ~/repos/dwl/config.h"
alias dwmrc="nvim ~/repos/dwm/config.h"
alias dmenurc="nvim ~/repos/dmenu/config.h"
alias strc="nvim ~/repos/st/config.h"

alias lg='lazygit'
alias ls="exa -a --group-directories-first"
alias cat="ccat"
alias grep="rg"
#: }}}

#: Functions {{{
for i in ${XDG_CONFIG_HOME:-$HOME/.config}/zsh/functions/*; do
    source "$i"
done
#: }}}

#: History {{{
HISTSIZE=50000
SAVEHIST=10000

## History command configuration
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt inc_append_history     # add commands to HISTFILE in order of execution
setopt share_history          # share command history data

bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down
#: }}}
