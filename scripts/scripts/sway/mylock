#!/usr/bin/env bash

# Copyright 2021 Bob Hepple <bob.hepple@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# definitions
IMAGE=/tmp/screen.jpg
ICON=~/Pictures/resources/lock.png
SELF=$0
TIMEOUT=600

# provide a way to customise rofi
ROFI=rofi
type myrofi &>/dev/null && ROFI=myrofi

get_current_idle() {
    IDLE=$( ps -ef | grep '[s]wayidle -w' )
            
    IDLE=$( echo "$IDLE" | sed "s/^.*swayidle -w //; s/timeout/\n&/g; s/before-sleep/\n&/g; s/after-resume/\n&/g" )
    MASK=0
    if echo "$IDLE" | grep -q '^timeout .* lock-now'; then
        LOCKING="on"
        MASK=$(( MASK + 100 ))
    else
        LOCKING="off"
    fi
    if echo "$IDLE" | grep -q '^timeout .* suspend'; then
        SUSPEND="on"
        MASK=$(( MASK + 10 ))
    else
        SUSPEND="off"
    fi
    if echo "$IDLE" | grep -q '^timeout .*output.*off'; then
        BLANKING="on"
        MASK=$(( MASK + 1 ))
    else
        BLANKING="off"
    fi
    case $MASK in
        0) MODE="movie" ;;
        1) MODE="at home" ;;
        111) MODE="safe" ;;
        101) MODE="download" ;;
    esac
    
    echo "On '$MODE' mode"
}

[[ -z "$1" ]] && {
    VAL=$(
        echo "Lock now                 No change to blanking/auto-lock/suspend
Safe mode:               Blanking, auto-lock & suspend
At home mode:            Blanking but no auto-lock or suspend
Downloading mode:        Blanking and auto-lock but no suspend
Movie mode:              No blanking, auto-lock or suspend" |
    $ROFI -width 26 -dmenu -i -no-custom -lines 5 -p "$( get_current_idle ), select a mode" -format d ) || exit 0

    case "$VAL" in
        1) VAL="lock-now" ;;
        2) VAL="safe-mode" ;;
        3) VAL="at-home-mode" ;;
        4) VAL="download-mode" ;;
        5) VAL="movie-mode" ;;
        *) exit
    esac

    set -- $VAL
}

case "$1" in
    "lock-now")
        # #--- Wait for lock support for dwl ---# #
        grim -t jpeg $IMAGE
        convert $IMAGE -scale 10% -scale 1000% $IMAGE
        convert $IMAGE $ICON -gravity center -composite -matte $IMAGE
        pkill swaylock
        swaylock -f --image "$IMAGE"
        ;;

    "safe-mode")
        pkill swayidle
        swayidle -w \
            timeout $TIMEOUT            "wlr-randr --output eDP-1 --off" \
            resume                      "wlr-randr --output eDP-1 --on" \
            timeout $(( TIMEOUT * 2 ))  "wlr-randr --output eDP-1 --on; $SELF lock-now" \
            timeout $(( TIMEOUT * 3 ))  "wlr-randr --output eDP-1 --off" \
            resume                      "wlr-randr --output eDP-1 --on" \
            timeout $(( TIMEOUT * 4 ))  "sudo systemctl suspend" \
            before-sleep                "$SELF lock-now" &
        ;;
        
    "at-home-mode")
        pkill swayidle
        swayidle -w \
            timeout $TIMEOUT  "wlr-randr --output eDP-1 --off" \
            resume            "wlr-randr --output eDP-1 --on" \
            before-sleep      "$SELF lock-now" \
            after-resume      "$SELF safe-mode" &
        ;;

    "download-mode")
        pkill swayidle
        swayidle -w \
            timeout $TIMEOUT            "wlr-randr --output eDP-1 --off" \
            resume                      "wlr-randr --output eDP-1 --on" \
            timeout $(( TIMEOUT * 2 ))  "wlr-randr --output eDP-1 --on; $SELF lock-now" \
            timeout $(( TIMEOUT * 3 ))  "wlr-randr --output eDP-1 --off" \
            resume                      "wlr-randr --output eDP-1 --on" \
            before-sleep                "$SELF lock-now" &
        ;;

    "movie-mode")
        pkill swayidle
        swayidle -w \
            before-sleep "$SELF lock-now" \
            after-resume "$SELF safe-mode" &
        ;;

esac
exit 0
